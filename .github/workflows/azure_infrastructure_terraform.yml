name: Deploy an infrastructure to Azure via Terraform
on: 
  workflow_dispatch
env: 
    ROOT_PATH: '${{github.workspace}}/Terraform/Azure'
    ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
    ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
    ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}

jobs:
  terraform_plan:
    name: Terraform pre-deploy
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: ${{env.ROOT_PATH}} 

    - name: Terraform Plan
      run: terraform plan
      working-directory: ${{env.ROOT_PATH}} 

  terraform_apply:
    name: Terraform deploy
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    environment: production

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
  
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
  
      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.ROOT_PATH}} 
  
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{env.ROOT_PATH}} 

      - name: Get Terraform Outputs
        id: get_outputs
        run: |
          echo "RESOURCE_GROUP_NAME=$(terraform output -raw resource_group_name)" >> $GITHUB_ENV
          echo "RESOURCE_VIRTUAL_NETWORK_NAME=$(terraform output -raw resource_virtual_network_name)" >> $GITHUB_ENV
          echo "RESOURCE_VIRTUAL_NETWORK_ADDRESS_SPACE=$(terraform output -json resource_virtual_network_address_space)" >> $GITHUB_ENV
          echo "RESOURCE_SUBNET1_NAME=$(terraform output -json resource_subnet1_name)" >> $GITHUB_ENV
          echo "RESOURCE_SUBNET1_ADDRESS_PREFIXES=$(terraform output -json resource_subnet1_address_prefixes)" >> $GITHUB_ENV
          echo "RESOURCE_SUBNET2_NAME=$(terraform output -json resource_subnet2_name)" >> $GITHUB_ENV
          echo "RESOURCE_SUBNET2_ADDRESS_PREFIXES=$(terraform output -json resource_subnet2_address_prefixes)" >> $GITHUB_ENV
          echo "RESOURCE_SUBNET3_NAME=$(terraform output -json resource_subnet3_name)" >> $GITHUB_ENV
          echo "RESOURCE_SUBNET3_ADDRESS_PREFIXES=$(terraform output -json resource_subnet3_address_prefixes)" >> $GITHUB_ENV
          echo "RESOURCE_MAIN_NSG_NAME=$(terraform output -raw resource_main_nsg_name)" >> $GITHUB_ENV
          
      - name: Use Terraform Outputs
        run: |
          echo "Resource Group Name: $RESOURCE_GROUP_NAME"
          echo "Resource Virtual Network Name: $RESOURCE_VIRTUAL_NETWORK_NAME"
          echo "Resource Virtual Network Address Space: $RESOURCE_VIRTUAL_NETWORK_ADDRESS_SPACE"
          echo "Resource Subnet 1 Name: $RESOURCE_SUBNET1_NAME"
          echo "Resource Subnet 1 Address Prefixes: $RESOURCE_SUBNET1_ADDRESS_PREFIXES"
          echo "Resource Subnet 2 Name: $RESOURCE_SUBNET2_NAME"
          echo "Resource Subnet 2 Address Prefixes: $RESOURCE_SUBNET2_ADDRESS_PREFIXES"
          echo "Resource Subnet 3 Name: $RESOURCE_SUBNET3_NAME"
          echo "Resource Subnet 3 Address Prefixes: $RESOURCE_SUBNET3_ADDRESS_PREFIXES"
          echo "Resource Main NSG Name: $RESOURCE_MAIN_NSG_NAME"
